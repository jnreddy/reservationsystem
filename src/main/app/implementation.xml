<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <flow name="registeruser">
        <set-variable variableName="userData" value="#[message.payloadAs(java.lang.String)]" mimeType="application/json" doc:name="Variable" metadata:id="615ca715-56db-45c3-b112-a067e996a19e"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="c3d10e0e-6e21-4eb0-98b4-b9a62898d1da">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="createuser">
            <db:parameterized-query><![CDATA[insert into user_details (userid,first_name,middle_name,last_name,dob,age,email_id,phone_number) values
(#[dw(flowVars.userData).userid],#[dw(flowVars.userData).userfirstname],#[dw(flowVars.userData).usermiddlename],#[dw(flowVars.userData).userlastname],STR_TO_DATE(#[dw(flowVars.userData).userdob],'%m/%d/%Y'),#[dw(flowVars.userData).userage],#[dw(flowVars.userData).useremail],#[dw(flowVars.userData).userphone])]]></db:parameterized-query>
        </db:insert>
        <set-payload value="{
  &quot;data&quot;: {
      &quot;results&quot;: &quot;user created&quot;,
       &quot;userid&quot;: #[dw(flowVars.userData).userid]                
    },
&quot;success&quot;:true,
&quot;status&quot;: 201
}" mimeType="application/json" doc:name="Set Response Payload"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getuserdetails">
        <set-variable variableName="userId" value="#[message.inboundProperties.'http.query.params'.userid]" doc:name="StoreUserid"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from user_details where userid=#[flowVars.userId]]]></db:parameterized-query>
        </db:select>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="b7d3cf79-66dd-46cc-8d27-59a860c3dec2">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	userid: payload[0].userid,
	userfirstname: payload[0].first_name,
	usermiddlename: payload[0].middle_name,
	userlastname: payload[0].last_name,
	userage: payload[0].age as :string,
	userdob: payload[0].dob as :string,
	useremail: payload[0].email_id,
	userphone: payload[0].phone_number
}
]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload" metadata:id="468254d4-065b-4937-ba99-f8921c73b523"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="authenticateuser">
        <set-variable variableName="userId" value="#[message.inboundProperties.'http.query.params']" doc:name="Variable"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select userid from user_details where userid=#[flowVars.userId.userid]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[flowVars.userId.userid!=payload.get(0).userid]">
                <set-property propertyName="Content-type" value="application/json" doc:name="Property"/>
                <set-payload value="{ result: false }" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
                <set-payload value="{ result: true }" doc:name="Set Payload"/>

                <logger message="#[payload]" level="INFO" doc:name="Logger"/>            </otherwise>
        </choice>
    </flow>
    <flow name="searchservices">
        <set-variable variableName="searchInput" value="#[message.inboundProperties.'http.query.params']" mimeType="application/json" doc:name="searchData"/>
        <db:select config-ref="MySQL_Configuration" doc:name="searchServices">
            <db:parameterized-query><![CDATA[select id,service_code,origin,destination,DATE(dep_date) as dep_date,DATE(arr_date) as arr_date,TIME(dep_time) as dep_time,TIME(arr_time) as arr_time,empty_seats,price from bus_services where origin= #[flowVars.searchInput.origin] and destination = #[flowVars.searchInput.destination] and dep_date = STR_TO_DATE(#[flowVars.searchInput.departureDate],'%m/%d/%Y') and arr_date = STR_TO_DATE(#[flowVars.searchInput.arrivalDate],'%m/%d/%Y') and available='Y']]></db:parameterized-query>
        </db:select>
        <logger message="#[payload.get(0).dep_time]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="3519e2dc-a97f-4be3-adeb-320b2979c1c7">
            <dw:input-payload doc:sample="sample_data\list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	response: payload map ((payload01 , indexOfPayload01) -> {
		id: payload01.id,
		buscode: payload01.service_code,
		origin: payload01.origin,
		destination: payload01.destination,
		departureDate: payload01.dep_date as :string,
		arrivalDate: payload01.arr_date as :string,
		departureTime: payload01.dep_time as :string,
		arrivalTime: payload01.arr_time as :string,
		emptyseats: payload01.empty_seats as :string,
		price: payload01.price as :number
	})
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
